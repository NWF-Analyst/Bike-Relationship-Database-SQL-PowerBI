<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="bike-relationship-database.db" readonly="0" foreign_keys="0" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="6512"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="TOP10_MOST_VALUEABLE_CUSTOMERS" custom_title="0" dock_id="1" table="4,30:mainTOP10_MOST_VALUEABLE_CUSTOMERS"/><table title="stocks" custom_title="0" dock_id="5" table="4,6:mainstocks"/><table title="brands" custom_title="0" dock_id="4" table="4,6:mainbrands"/><table title="orders" custom_title="0" dock_id="6" table="4,6:mainorders"/><dock_state state="000000ff00000000fd0000000100000002000004010000020cfc0100000001fc00000000000004010000013300fffffffa000000030100000004fb000000160064006f0063006b00420072006f00770073006500310100000000ffffffff0000012300fffffffb000000160064006f0063006b00420072006f00770073006500340100000000ffffffff0000011e00fffffffb000000160064006f0063006b00420072006f00770073006500350100000000ffffffff0000012300fffffffb000000160064006f0063006b00420072006f00770073006500360100000000ffffffff0000013300ffffff000004010000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Average_Discount_Rate_By_Products" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="72"/><column index="2" value="300"/><column index="3" value="86"/><column index="4" value="73"/><column index="5" value="94"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="TOP10_MOST_VALUEABLE_CUSTOMERS" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="83"/><column index="2" value="72"/><column index="3" value="71"/><column index="4" value="87"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="Valueable_Orders" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="60"/><column index="2" value="71"/><column index="3" value="57"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="brands" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="61"/><column index="2" value="103"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="categories" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="80"/><column index="2" value="99"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="customers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="6" mode="0"/></sort><column_widths><column index="1" value="83"/><column index="2" value="72"/><column index="3" value="71"/><column index="4" value="94"/><column index="5" value="38"/><column index="6" value="247"/><column index="7" value="183"/><column index="8" value="40"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="order_items" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="56"/><column index="2" value="61"/><column index="3" value="73"/><column index="4" value="57"/><column index="5" value="63"/><column index="6" value="57"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="orders" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="60"/><column index="2" value="84"/><column index="3" value="84"/><column index="4" value="74"/><column index="5" value="93"/><column index="6" value="87"/><column index="7" value="60"/><column index="8" value="56"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="products" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="72"/><column index="2" value="91"/><column index="3" value="62"/><column index="4" value="81"/><column index="5" value="75"/><column index="6" value="63"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="staffs" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="55"/><column index="2" value="72"/><column index="3" value="71"/><column index="4" value="38"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="stocks" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="59"/><column index="2" value="72"/><column index="3" value="57"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="stores" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="59"/><column index="2" value="135"/><column index="3" value="119"/><column index="4" value="167"/><column index="5" value="159"/><column index="6" value="87"/><column index="7" value="39"/><column index="8" value="60"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Challenge 1">SELECT 
p.Product_ID,
p.Product_Name,
p.List_Price,
oi.Quantity,
oi.Discount,
o.Order_ID,
o.Shipped_Date,
SUM(oi.Quantity * p.List_Price * (1 - oi.discount)) AS Total_Revenue
FROM products p
JOIN order_items oi
	ON p.Product_ID = oi.Product_ID
JOIN orders o
	ON o.Order_ID = oi.Order_ID
WHERE strftime('%Y', o.Shipped_Date) = '2018'
GROUP BY p.Product_ID, p.Product_Name
ORDER BY Total_Revenue DESC;</sql><sql name="Challenge 2">SELECT 
o.Customer_ID,
c.First_Name,
c.Last_Name,
SUM(oi.Quantity * oi.List_Price * (1 - oi.discount)) AS Total_Spent
FROM order_items oi
JOIN orders o
	ON oi.Order_ID = o.Order_ID
JOIN customers c
	ON o.Customer_ID = c.Customer_ID
GROUP BY o.Customer_ID, c.First_Name, c.Last_Name
ORDER BY Total_Spent DESC
LIMIT (10);</sql><sql name="Challenge 3">CREATE VIEW Monthly_Trends AS
SELECT 
strftime('%Y-%m', o.Order_date) AS month,
SUM(oi.Quantity * oi.List_Price * (1 - oi.discount)) AS Total_Sales
FROM order_items oi
JOIN orders o
	ON oi.Order_ID = o.Order_ID
GROUP BY month
ORDER BY month ASC;
</sql><sql name="Challenge 4">CREATE VIEW Total_Sales_by_Staff AS
SELECT 
s.Staff_ID,
s.First_Name || ' ' || s.Last_Name AS Full_Name,
ROUND(SUM(oi.List_Price * oi.Quantity * (1 - oi.discount)),2) AS Total_Sales
FROM staffs s
JOIN orders o 
	ON s.Staff_ID = o.Staff_ID
JOIN order_items oi
	ON o.order_ID = oi.Order_ID
GROUP BY s.Staff_ID
ORDER BY Total_Sales DESC;</sql><sql name="Challenge 5">CREATE VIEW Store_Sales AS
SELECT 
s.Store_ID,
s.Store_Name,
ROUND(SUM(oi.List_Price * oi.Quantity * (1 - oi.discount)),2) AS Total_Sales
FROM stores s
JOIN orders o 
	ON s.Store_ID = o.Store_ID
JOIN order_items oi
	ON o.order_ID = oi.Order_ID
GROUP BY s.Store_ID
ORDER BY Total_Sales DESC;</sql><sql name="Challenge 6">CREATE VIEW Total_Units_Sold_By_Categories AS
SELECT
  c.Category_ID,
  c.Category_Name,
  SUM(oi.Quantity) AS Total_Units_Sold,
  COUNT(DISTINCT o.Order_ID) AS Num_Orders,
  STRFTIME('%m', o.Order_Date) AS Month_Num,
  CASE STRFTIME('%m', o.Order_Date)
  WHEN '01' THEN 'January'
  WHEN '02' THEN 'February'
  WHEN '03' THEN 'March'
  WHEN '04' THEN 'April'
  WHEN '05' THEN 'May'
  WHEN '06' THEN 'June'
  WHEN '07' THEN 'July'
  WHEN '08' THEN 'August'
  WHEN '09' THEN 'September'
  WHEN '10' THEN 'October'
  WHEN '11' THEN 'November'
  WHEN '12' THEN 'December'
END AS Month_Name
FROM categories c
JOIN products p
  ON c.Category_ID = p.Category_ID
JOIN order_items oi
  ON oi.Product_ID = p.Product_ID
JOIN orders o
  ON oi.Order_ID = o.Order_ID
WHERE o.Order_Date 
BETWEEN '2018-01-01' AND '2018-12-31'
GROUP BY 
c.Category_ID, 
c.Category_Name,
STRFTIME('%m', o.Order_Date)
ORDER BY 
Total_Units_Sold 
DESC;
</sql><sql name="Challenge 7">CREATE VIEW Average_Discount_Rate_By_Products AS
SELECT
p.Product_ID,
p.Product_Name,
ROUND(AVG(oi.Discount),2) AS Ave_Discount,
COUNT(oi.Order_ID) AS Times_Sold,
ROUND(SUM(oi.List_Price * oi.Quantity * (1 - oi.Discount)), 2) AS Total_Revenue
FROM products p
JOIN order_items oi
	ON p.Product_ID = oi.Product_ID
GROUP BY p.Product_ID, p.Product_Name
ORDER BY Ave_Discount;</sql><sql name="Challenge 8">CREATE VIEW Valueable_Orders AS
WITH Order_Value AS (
SELECT
o.Order_ID,
ROUND(SUM(oi.List_Price * oi.Quantity * (1 - oi.Discount)), 2) AS Value
FROM orders o
JOIN order_items oi
	ON o.Order_ID = oi.Order_ID
GROUP BY o.order_ID
),

Ranked_Order AS (
SELECT 
order_ID,
Value,
row_number() OVER (ORDER BY Value DESC) AS rankings
FROM Order_Value
)

SELECT * 
FROM Ranked_Order
Where Rankings &lt;= 10;</sql><sql name="Challenge 9">CREATE VIEW rate AS	

-- in Order Status
-- &quot;1&quot; means pending, &quot;2&quot; for processed, &quot;3&quot; for cancelled and &quot;4&quot; for Completed
WITH Inital_Filter AS
(
SELECT 
COUNT(order_id) AS total_orders,
SUM(CASE WHEN Order_Status = '1' THEN 1 ELSE 0 END) AS Pending_Orders, 
SUM(CASE WHEN Order_Status = '2' THEN 1 ELSE 0 END) AS Processed_Orders,
SUM(CASE WHEN Order_Status = '3' THEN 1 ELSE 0 END) AS Cancelled_Orders, 
SUM(CASE WHEN Order_Status = '4' THEN 1 ELSE 0 END) AS Completed_Orders, 
SUM(CASE WHEN Shipped_Date IS NULL THEN 1 ELSE 0 END) AS Unprocessed
FROM orders
)

SELECT 
ROUND(CAST(Pending_Orders AS FLOAT)/NULLIF(total_orders, 0) * 100, 2) AS pending_rate,
ROUND(CAST(Processed_Orders AS FLOAT)/NULLIF(total_orders, 0) * 100, 2) AS processed_rate,
ROUND(CAST(Cancelled_Orders AS FLOAT)/NULLIF(total_orders, 0) * 100, 2) AS cancelled_rate,
ROUND(CAST(Completed_Orders AS FLOAT)/NULLIF(total_orders, 0) * 100, 2) AS completed_rate,
ROUND(CAST(Unprocessed AS FLOAT)/NULLIF(total_orders, 0) * 100, 2) AS unprocessed_rate,
total_orders
FROM Inital_Filter;
</sql><sql name="SQL 10*">SELECT 
  Order_Status,
  COUNT(*) AS total_per_status,
  ROUND(COUNT(*) * 100.0 / (SELECT COUNT(*) FROM orders), 2) AS status_rate
FROM orders
GROUP BY Order_Status;
</sql><current_tab id="9"/></tab_sql></sqlb_project>
